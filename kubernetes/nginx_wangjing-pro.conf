daemon off;
worker_processes 4;
user root;
pid  /var/run/nginx.pid;
worker_rlimit_nofile 65535;

# Nginx events配置
events {
    use epoll;
    accept_mutex off;
    multi_accept off;
    worker_connections 65535;
}

http {
    client_header_buffer_size 64k;
    large_client_header_buffers 4 64k;
    include               /etc/nginx/mime.types;
    default_type          application/octet-stream;
    sendfile              on;
    keepalive_timeout     120;
    proxy_buffer_size  128k;
    proxy_buffers   32 32k;
    proxy_busy_buffers_size 128k;

    log_format log_json '{ "@timestamp": "$time_iso8601",'
                    '"remote_addr": "$remote_addr",'
                    '"referer": "$http_referer",'
                    '"scheme":"$scheme",'
                    '"method":"$request_method",'
                    '"uri":"$uri",'
                    '"args":"$args",'
                    '"status": $status,'
                    '"bytes": $body_bytes_sent,'
                    '"env": "pre",'
                    '"agent": "$http_user_agent",'
                    '"x_forwarded": "$http_x_forwarded_for",'
                    '"domain": "$host",'
                    '"up_addr": "$upstream_addr",'
                    '"up_host": "$upstream_http_host",'
                    '"up_resp_time": "$upstream_response_time",'
                    '"request_time": $request_time,'
                    '"request_length": "$request_length",'
                    '"upstream_connect_time": "$upstream_connect_time",'
                    '"upstream_cookie_name": "$upstream_cookie_name",'
                    '"upstream_header_time": "$upstream_header_time",'
                    '"upstream_http_name": "$upstream_http_name",'
                    '"upstream_status": "$upstream_status"'
    '}';

    access_log  syslog:server=syslog.gic.local,tag=nginx log_json;
    error_log  syslog:server=syslog.gic.local,tag=nginx error;


    server {
        listen                  80 default_server;
        charset utf-8;
        client_max_body_size 1024M;

        location @router {
            rewrite ^.*$ /index.html last;
        }

        location / {
            root        /app/dist;
            try_files   $uri $uri/ @router;
            index       index.html;
        }

        location /mongodb/v1 {
            set $originaddr http://mongodb-service-python.default.svc.cluster.local;
            proxy_http_version 1.1;
            resolver 169.254.20.10;
            proxy_pass_request_headers            on;
            proxy_set_header   origin             $host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host   $host;
            proxy_set_header   X-Forwarded-Proto  $scheme;
            proxy_pass  $originaddr;
        }
    }
}
